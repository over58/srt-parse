/*! For license information please see srt-parser.min.js.LICENSE.txt */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.srtParser=e():t.srtParser=e()}(this,(function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(r,s,function(e){return t[e]}.bind(null,s));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./src/index.js")}({"./src/index.js":function(module,exports){eval("module.exports = function parseSrt(srt) {\n  var subtitles = [];\n  var textSubtitles = srt.split('\\r\\n\\r\\n').filter(function (x) {\n    return x;\n  }); // 每条字幕的信息，包含了序号，时间，字幕内容\n\n  try {\n    for (var i = 0; i < textSubtitles.length; i++) {\n      var textSubtitle = textSubtitles[i].split('\\n').filter(function (x) {\n        return x.trim();\n      });\n      console.log(\"\\u7B2C\".concat(i + 1, \"\\u6761\\u5B57\\u5E55:\"), textSubtitle);\n\n      if (textSubtitle.length >= 2) {\n        var sequence = textSubtitle[0];\n        var startTime = toSecond(textSubtitle[1].split(/\\s*--\x3e\\s*/)[0].trim());\n        var endTime = toSecond(textSubtitle[1].split(/\\s*--\x3e\\s*/)[1].trim());\n        var subtitleEn = '';\n        var subtitle = '';\n\n        for (var j = 2; j < textSubtitle.length; j++) {\n          if (/[\\u4e00-\\u9fa5]/g.test(textSubtitle[j])) {\n            subtitle += textSubtitle[j] + '\\n';\n          } else {\n            subtitleEn += textSubtitle[j] + '\\n';\n          }\n        }\n\n        var t = {\n          sequence: +sequence,\n          startTime: parseInt(startTime * 1000),\n          endTime: parseInt(endTime * 1000),\n          subtitleEn: subtitleEn.trim(),\n          subtitle: subtitle.trim()\n        };\n        subtitles.push(t);\n      }\n    }\n\n    var _subtitles$endTime = subtitles[subtitles.length - 1].endTime,\n        e = _subtitles$endTime === void 0 ? 0 : _subtitles$endTime;\n    var minutes = parseInt(e / 60);\n    var seconds = parseInt(e % 60);\n    console.log({\n      subtitles: subtitles,\n      minutes: minutes,\n      seconds: seconds,\n      duration: e\n    });\n    return {\n      subtitles: subtitles,\n      minutes: minutes,\n      seconds: seconds,\n      duration: e\n    };\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n/**\r\n * 把字符串格式的字幕时间转换为浮点数\r\n * @param  string t 字符串格式的时间\r\n * @return 浮点数格式的时间\r\n */\n\n\nfunction toSecond(t) {\n  var s = 0.0;\n\n  if (t) {\n    return t.split(':').reduce(function (s, cur) {\n      s += s * 60 + parseFloat(cur.replace(',', '.'));\n      return s;\n    }, 0.0);\n  }\n\n  return s;\n}\n\n//# sourceURL=webpack://srtParser/./src/index.js?")}})}));